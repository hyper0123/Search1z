name: Buscar Astra Control Panel y Listas M3U funcionales

on:
  workflow_dispatch:
    inputs:
      COUNTRY:
        description: 'C√≥digo del pa√≠s (ej: AR, CL, PE)'
        required: true

permissions:
  contents: write

jobs:
  scan:
    runs-on: ubuntu-latest
    env:
      COUNTRY: ${{ github.event.inputs.COUNTRY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Crear carpeta temporal
        run: mkdir -p temp data/${COUNTRY} listas/${COUNTRY}

      - name: Buscar en Shodan
        env:
          SHODAN_API_KEY: ${{ secrets.SHODAN_API_KEY }}
        run: |
          QUERY='http.title:"Astra Control Panel" country:'${COUNTRY}
          curl -s "https://api.shodan.io/shodan/host/search?key=${SHODAN_API_KEY}&query=${QUERY}&limit=50" | jq -r '.matches[].ip_str + ":" + (.matches[].port|tostring)' > temp/shodan.txt || true

      - name: Buscar en ZoomEye
        env:
          ZOOMEYE_API_KEY: ${{ secrets.ZOOMEYE_API_KEY }}
        run: |
          curl -s -H "API-KEY: ${ZOOMEYE_API_KEY}" "https://api.zoomeye.org/host/search?query=Astra%20Control%20Panel%20country:${COUNTRY}&page=1" | jq -r '.matches[] | .ip + ":" + (.port|tostring)' > temp/zoomeye.txt || true

      - name: Buscar en Fofa
        env:
          FOFA_EMAIL: ${{ secrets.FOFA_EMAIL }}
          FOFA_API_KEY: ${{ secrets.FOFA_API_KEY }}
        run: |
          QUERY='title="Astra Control Panel" && country="'${COUNTRY}'"'
          BASE64_QUERY=$(echo -n "$QUERY" | base64)
          curl -s "https://fofa.info/api/v1/search/all?email=${FOFA_EMAIL}&key=${FOFA_API_KEY}&qbase64=${BASE64_QUERY}&size=50" | jq -r '.results[] | .[0]' | sed -nE 's#http[s]?://([^:/]+)(:([0-9]+))?.*#\1:\3#p' > temp/fofa.txt || true

      - name: Unir resultados
        run: |
          cat temp/*.txt | grep -E '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+:[0-9]+' | sort -u > data/${COUNTRY}/urls.txt

      - name: Probar URLs y extraer listas funcionales
        run: |
          INDEX=1
          while IFS=: read -r IP PORT; do
            [ -z "$PORT" ] && PORT=80
            URL="http://$IP:$PORT/playlist.m3u"
            echo "üîç Probing $URL"
            STATUS=$(curl -s -o temp/playlist.m3u -w "%{http_code}" --max-time 10 "$URL")
            if [[ "$STATUS" == "200" ]]; then
              if grep -q ".m3u8" temp/playlist.m3u; then
                cp temp/playlist.m3u listas/${COUNTRY}/lista$INDEX.m3u
                echo "‚úÖ Lista v√°lida guardada: listas/${COUNTRY}/lista$INDEX.m3u"
                INDEX=$((INDEX+1))
              else
                echo "‚ö†Ô∏è  No contiene streams .m3u8"
              fi
            else
              echo "‚ùå No disponible ($STATUS)"
            fi
            sleep 2
          done < data/${COUNTRY}/urls.txt

      - name: Commit de resultados
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add data/${COUNTRY}/urls.txt listas/${COUNTRY}/
          git commit -m "üîç Listas v√°lidas de ${COUNTRY}" || echo "Nada que commitear"
          git push
