name: Buscar Astra Control Panel y Listas M3U funcionales

on:
  workflow_dispatch:
    inputs:
      COUNTRY:
        description: 'Código del país (ej: AR, CL, PE)'
        required: true

permissions:
  contents: write

jobs:
  scan:
    runs-on: ubuntu-latest
    env:
      COUNTRY: ${{ github.event.inputs.COUNTRY }}
      PLAY_PATH: playlist.m3u

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Preparar carpetas
        run: |
          mkdir -p temp data/${COUNTRY} listas/${COUNTRY}

      - name: Buscar en Shodan
        env:
          SHODAN_API_KEY: ${{ secrets.SHODAN_API_KEY }}
        run: |
          QUERY='http.title:"Astra Control Panel" country:'"${COUNTRY}"
          curl -s "https://api.shodan.io/shodan/host/search?key=${SHODAN_API_KEY}&query=${QUERY}&limit=100" \
            | jq -r '.matches[] | .ip_str+":"+(.port|tostring)' > temp/shodan.txt || true

      - name: Buscar en ZoomEye con paginación
        env:
          ZOOMEYE_API_KEY: ${{ secrets.ZOOMEYE_API_KEY }}
        run: |
          rm -f temp/zoomeye.txt
          QUERY='title:"Astra Control Panel" country:'"${COUNTRY}"
          for PAGE in {1..5}; do
            echo "ZoomEye página $PAGE"
            RESP=$(curl -s -H "API-KEY: $ZOOMEYE_API_KEY" \
              "https://api.zoomeye.org/host/search?query=${QUERY}&page_size=50&page=${PAGE}")
            COUNT=$(echo "$RESP" | jq '.matches | length')
            echo "  coincidencias: $COUNT"
            [ "$COUNT" -eq 0 ] && break
            echo "$RESP" | jq -r '.matches[] | .ip+":"+(.port|tostring)' >> temp/zoomeye.txt
            sleep 1
          done || true

      - name: Buscar en Fofa con paginación
        env:
          FOFA_EMAIL: ${{ secrets.FOFA_EMAIL }}
          FOFA_API_KEY: ${{ secrets.FOFA_API_KEY }}
        run: |
          rm -f temp/fofa.txt
          QUERY='title="Astra Control Panel" && country="'"${COUNTRY}"'"'
          B64=$(echo -n "$QUERY" | base64)
          for PAGE in {1..5}; do
            echo "FOFA página $PAGE"
            RESP=$(curl -s \
              "https://fofa.info/api/v1/search/all?email=${FOFA_EMAIL}&key=${FOFA_API_KEY}&qbase64=${B64}&page=${PAGE}&size=50")
            COUNT=$(echo "$RESP" | jq '.results | length')
            echo "  resultados: $COUNT"
            [ "$COUNT" -eq 0 ] && break
            echo "$RESP" | jq -r '.results[] | .[0]+":"+. [1]' >> temp/fofa.txt
            sleep 1
          done || true

      - name: Unir y deduplicar URLs
        run: |
          cat temp/shodan.txt temp/zoomeye.txt temp/fofa.txt 2>/dev/null \
            | sort -u > data/${COUNTRY}/urls.txt
          echo "Total únicos: $(wc -l < data/${COUNTRY}/urls.txt)}"

      - name: Probar hosts y extraer listas
        run: |
          INDEX=1
          while IFS=: read -r IP PORT; do
            [ -z "$PORT" ] && PORT=80
            URL="http://$IP:$PORT/${PLAY_PATH}"
            STATUS=$(curl -s -o temp/playlist.m3u -w "%{http_code}" --max-time 10 "$URL")
            if [ "$STATUS" = "200" ] && grep -q ".m3u8" temp/playlist.m3u; then
              cp temp/playlist.m3u listas/${COUNTRY}/lista${INDEX}.m3u
              echo "Guardada: listas/${COUNTRY}/lista${INDEX}.m3u"
              INDEX=$((INDEX+1))
            fi
            sleep 2
          done < data/${COUNTRY}/urls.txt

      - name: Commit de resultados
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add data/${COUNTRY}/urls.txt listas/${COUNTRY}/
          git commit -m "Listas válidas de ${COUNTRY}" || echo "Sin cambios"
          git push

